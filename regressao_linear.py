# -*- coding: utf-8 -*-
"""Regressao Linear.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1E9KvVPinrfW_wr-du8cLfA9bhdpvpqso

#Treinamento de Dados com Regressão Linear

#Importando as Bibliotecas Necessárias
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

"""#Criando Dados Fictícios"""

Temperatura = [15, 18, 20, 22, 25, 27, 30, 32, 35, 37, 40, 42]
Vendas = [5, 8, 12, 15, 20, 25, 30, 35, 40, 45, 50, 55]


# Dataframe
df = pd.DataFrame({'Temperatura(°C) (X)': Temperatura, 'Vendas (Y)': Vendas})
display(df)

"""#Dividindo os Dados para o Treinamento"""

X = df[['Temperatura(°C) (X)']]
y = df['Vendas (Y)']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

"""#Realizando o Treinamento do Modelo"""

model = LinearRegression()
model.fit(X_train, y_train)

"""#Fazendo o a Previsão e Calculando o Resultado do Erro Médio Absoluto"""

y_prev = model.predict(X_test)
print(f'Valor Resultado da minha previsão: {y_prev}')

mae = mean_absolute_error(y_test, y_prev)
mse = mean_squared_error(y_test, y_prev)
rmse = np.sqrt(mse)
r2 = r2_score(y_test, y_prev)

print(f"MAE: {mae}")
print(f"MSE: {mse}")
print(f"RMSE: {rmse}")
print(f"R²: {r2}")

"""#Mostrando a Previsão em um Gráfico"""

plt.scatter(X_test, y_test, color="Blue", label="Dados de Teste")
plt.plot(X_test, y_test, color="Red", linewidth=1.5, label="Linha de Regressão")
plt.xlabel("Temperatura (°C)")
plt.ylabel("Vendas de Bebidas Geladas")
plt.show()